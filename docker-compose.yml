# Docker Compose file Reference (https://docs.docker.com/compose/compose-file/)
version: '3.9'
# Define services
services:
  # App backend service
  #app:
    # This service depends on postgres db and keycloak auth. Start that first.
   # depends_on:
    #  db:
     #   condition: service_healthy
      #keycloak:
       # condition: service_started
    #image: spring-boot-keycloak-docker-postgres:latest
    #build:
     # context: ./
     # dockerfile: "Dockerfile"
    # Give the container the name web-app. You can change to something else.
    #container_name: web-app
    # Forward the exposed port 8080 on the container to port 8080 on the host machine
    #ports:
      # - "0.0.0.0:8088:8080/tcp"
     # - target: 8080
      #  host_ip: 0.0.0.0
       # published: 8088
        #protocol: tcp
        #mode: host
    #ports:
     # - "8080:8080"
    #networks:
     # - backend
    # entrypoint: [ "java", "-Xms512m", "-Xmx1g", "-jar" ]
  # Database Service (Postgres)
  #db:
    # Give the container the name postgres-db. You can change to something else.
   # container_name: postgres-db
    # Use the Docker Image postgres. This will pull the 14 version.
    #image: postgres:14-alpine
    #healthcheck:
     # test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "root" ]
      #timeout: 45s
      #interval: 10s
      #retries: 10
    #restart: always
    # Set a volume some that database is not lost after shutting down the container.
    # I used the name postgres-data, but you can change it to something else.
    #volumes:
     # - postgres_data_keycloak:/var/lib/postgresql/data
    #networks:
     # - backend
    #network_mode: host
    # Maps port 5432 (localhost) to port 5432 on the container. You can change the ports to fix your needs.
    #ports:
     # - "5432:5432"
    # Set up the username, password, and database name. You can change these values.
    #environment:
     # POSTGRES_USER: postgres
      #POSTGRES_PASSWORD: postgres
      #POSTGRES_DB: automobiles
      #PGDATA: /var/lib/postgresql/data/pgdata
  # Auth service
  keycloak:
    container_name: keycloak-auth
    image: quay.io/keycloak/keycloak:22.0.1
    #build:
     # context: .
      #args:
       # KEYCLOAK_VERSION: 22.0.1
    command:
      - "start-dev"
    ports:
      - "8180:8080"
    networks:
      - keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: password
      KC_DB: postgres
      KC_DB_URL_HOST: keycloak-db
      KC_DB_URL_DATABASE: keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password
      KC_HEALTH_ENABLED: true
    depends_on:
       - keycloak-db
    #volumes:
    #  - /home/keycloak/automobile-realm.json:/opt/keycloak/data/import/automobile-realm.json
  # Database Service (Postgres) for Keycloak
  keycloak-db:
    image: postgres:14-alpine
    container_name: keycloak-db
    ports:
      - "5433:5432"
    volumes:
      - postgres_data_keycloak:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    networks:
      - keycloak
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "root" ]
      timeout: 45s
      interval: 10s
      retries: 10

networks:
 # backend:
  #  name: app
   # driver: bridge
  keycloak:
    name: keycloak
    driver: bridge

volumes:
  postgres_data_keycloak:
    driver: local
